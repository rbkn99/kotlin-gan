,rule_name
0,empty
1,kotlinFile
2,"
"
3,packageHeader
4,importList
5,importHeader
6,import
7,identifier
8,simpleIdentifier
9,kotlin
10,.
11,test
12,assertEquals
13,semi
14,topLevelObject
15,declaration
16,classDeclaration
17,modifiers
18,modifier
19,classModifier
20,annotation
21,class
22,primaryConstructor
23,classParameters
24,(
25,classParameter
26,val
27,value
28,:
29,type
30,typeReference
31,userType
32,simpleUserType
33,String
34,)
35,semis
36,Anno
37,singleAnnotation
38,annotationUseSiteTarget
39, @
40,get
41,unescapedAnnotation
42,constructorInvocation
43,valueArguments
44,valueArgument
45,expression
46,disjunction
47,conjunction
48,equality
49,comparison
50,genericCallLikeComparison
51,infixOperation
52,elvisExpression
53,infixFunctionCall
54,rangeExpression
55,additiveExpression
56,multiplicativeExpression
57,asExpression
58,prefixUnaryExpression
59,postfixUnaryExpression
60,primaryExpression
61,stringLiteral
62,lineStringLiteral
63,""""
64,lineStringContent
65,O
66,o
67,","
68,K
69,k
70,functionDeclaration
71,fun
72,box
73,functionValueParameters
74,functionBody
75,block
76,{
77,statements
78,statement
79,propertyDeclaration
80,variableDeclaration
81,=
82,postfixUnarySuffix
83,navigationSuffix
84,memberAccessOperator
85,::
86,java
87,declaredMethods
88,jumpExpression
89,return
90,parenthesizedExpression
91,single
92,callSuffix
93,annotatedLambda
94,lambdaLiteral
95,it
96,name
97,equalityOperator
98,==
99,}
100,annotations
101,asOperator
102,as
103,additiveOperator
104,+
105,<EOF>
106,"
@"
107,Retention
108,AnnotationRetention
109,RUNTIME
110,First
111,enum
112,E
113,enumClassBody
114,enumEntries
115,enumEntry
116,classBody
117,classMemberDeclarations
118,classMemberDeclaration
119,foo
120,OK
121,e
122,getDeclaredField
123,toString
124,if
125,size
126,!=
127,1
128,${
129,toList
130,Fail
131,$
132,Ann
133,v
134,inheritanceModifier
135,open
136,My
137,unaryPrefix
138,objectLiteral
139,object
140,delegationSpecifiers
141,annotatedDelegationSpecifier
142,delegationSpecifier
143,klass
144,javaClass
145,2
146,$annotations
147,Target
148,AnnotationTarget
149,M
150,@
151,result
152,Int
153,getAnnotation
154,safeNav
155,?
156,elvis
157,x
158,A
159,literalConstant
160,functionValueParameter
161,parameter
162,y
163,z
164,secondaryConstructor
165,constructor
166,B
167,Array
168,typeArguments
169,<
170,typeProjection
171,typeProjectionModifiers
172,typeProjectionModifier
173,varianceModifier
174,out
175,Annotation
176,>
177,filterIsInstance
178,$name
179,0
180,getDeclaredMethods
181,first
182,getName
183,\$
184,default
185,multiVariableDeclaration
186,3
187,indexingSuffix
188,[
189,]
190,reflect
191,check
192,element
193,Boolean
194,isNotEmpty
195,Fail: 
196,memberModifier
197,lateinit
198,var
199,x0
200,visibilityModifier
201,private
202,x1
203,callableReference
204,getter
205,true
206,false
207,FIELD
208,C
209,
210,KProperty
211,parameterModifier
212,vararg
213,set
214,x2
215,x3
216,x4
217,internal
218,x5
219,protected
220,x6
221,setter
222,parameterWithOptionalType
223,f
224,assignment
225,directlyAssignableExpression
226,field
227,parameters
228,companionObject
229,companion
230,Nested
231,JvmField
232,propertyModifier
233,const
234,JvmStatic
235,Delegate
236,delegate
237,propertyDelegate
238,by
239,functionModifier
240,operator
241,getValue
242,thisRef
243,nullableType
244,Any
245,quest
246,prop
247,*
248,setValue
249,property
250,s
251,lang
252,Class
253,typeAlias
254,typealias
255,receiverType
256,!
257,any
258,isSynthetic
259,&&
260,throw
261,AssertionError
262,this
263,simpleName
264,method
265,with
266,"
}"
267,public
268,ifExpression
269,listOf
270,ElementType
271,METHOD
272,controlStructureBody
273,;
274,RetentionPolicy
275,JavaClass
276,interface
277,Foo
278,int
279,NoSuchMethodException
280,getMethod
281,10
282,else
283,$test
284,42
285,KClass
286,i
287,a
288,c
289,IntArray
290,intArrayOf
291,arrayOf
292,b
293,ann
294,MyClass
295,) return 
296,fail
297,should
298,be
299,\
300,"\"""
301,of
302,but
303,was
304,", "
305,"
    return "
306,t
307,p
308,getDeclaredMethod
309,J
310,double
311,Double
312,
313,1.0
314,/
315,0.0
316,float
317,Float
318,1.0f
319,0.0f
320,fileAnnotation
321,file
322,JvmName
323,forName
324,package
325,Test1
326,typeParameters
327,typeParameter
328,T
329,Test2
330,T1
331,T2
332,I
333,Test3
334,xs
335,38
336,39
337,collectionLiteral
338,40
339,50
340,24
341,44
342,55
343,66
344,JavaAnn
345,fail1: 
346,fail2
347,fail3
348,fail4
349,value2
350,fail5
351,fail6
352,9
353,"

    return "
354,"
}
"
355,5
356,byte
357,short
358,d
359,long
360,j
361,g
362,on
363,for
364,expected
365,getX
366,constructorDelegationCall
367,static
368,final
369,-
370,2f
371,2.0
372,l
373,2L
374,boolean
375,char
376,'c'
377,str
378,i2
379,toInt
380,c2
381,Modifier
382,and
383,prefixUnaryOperator
384,excl
385,"
    }
}
"
386,CLASS
387,assert
388,asList
389,implements
390,id
391,Override
392,Void
393,Documented
394,inline
395,typeParameterModifiers
396,typeParameterModifier
397,reificationModifier
398,reified
399,Bar
400,kind
401,FAIL
402,Test
403,parameterModifiers
404,123
405,DefaultImpls
406,joinToString
407,u
408,UInt
409,arr
410,comparisonOperator
411,3.0
412,isOperator
413,is
414,isEmpty
415,contentEquals
416,Byte
417,Short
418,Long
419,Char
420,toByte
421,Suppress
422,INVISIBLE_MEMBER
423,INVISIBLE_REFERENCE
424,bar
425,4
426,fail1
427,actual
428,clazz
429,loopStatement
430,forStatement
431,in
432,assertTrue
433,\\
434,matches
435,Companion
436,TYPE
437,util
438,List
439,list
440,12
441,functionType
442,functionTypeParameters
443,->
444,Unit
445,foo1
446,index
447,withIndex
448,$index
449,testClass
450,functionLiteral
451,anonymousFunction
452,parametersWithOptionalType
453,apply
454,Runnable
455,getClass
456,void
457,args
458,fail 1
459,fail 2
460,postfixUnaryOperator
461,Set
462,let
463,inOperator
464,TYPE_USE
465,jvm
466,javaMethod
467,javaField
468,Kotlin
469,message
470,$message
471,$type
472,new
473,operation
474,typeModifiers
475,typeModifier
476,foo2
477,returnType
478,Base
479,assignableExpression
480,assignmentAndOperator
481,+=
482,fail 
483,$result
484,Derived
485,res
486,call
487,||
488,fail: 
489,$res
490,1L
491,9L
492,fail 1: 
493, != 
494,fail 2: 
495,fail 3: 
496,fail 4: 
497,_
498,or
499,L
500,Z
501,21
502,receiver
503,init
504,map
505,R
506,toDouble
507,array
508,lambdaParameters
509,lambdaParameter
510,++
511,thisExpression
512,assignableSuffix
513,LongArray
514,iterator
515,whileStatement
516,while
517,hasNext
518,next
519,Fail 
520,$i
521,7
522,Cloneable
523,shortArrayOf
524,byteArrayOf
525,doubleArrayOf
526,clone
527,===
528,ss
529,toShort
530,'a'
531,'b'
532,1f
533,ArrayList
534,add
535,BooleanArray
536,$x
537,ByteArray
538,CharArray
539,toChar
540,DoubleArray
541,FloatArray
542,toFloat
543,toLong
544,ShortArray
545,abstract
546,HashMap
547,put
548,239
549,indices
550, 
551,$j
552,Iterator
553,action
554,In
555,select
556,override
557,multiplicativeOperator
558,20
559,30
560,objectDeclaration
561,main
562,t1
563,a1
564,arrayOfNulls
565,t2
566,a2
567,t3
568,a3
569,b1
570,b2
571,b3
572,6
573,foobar
574,test1
575,test2
576,Z2
577,run
578,test3
579,local
580,test4
581,Failed: 
582,100
583,'1'
584,11
585,13
586,$p
587,%
588,n
589,MAX_VALUE
590,until
591,m
592,from
593,whenExpression
594,when
595,whenSubject
596,whenEntry
597,whenCondition
598,break
599,tryExpression
600,try
601,catchBlock
602,catch
603,>=
604,? 
605,Integer
606,to
607,second
608,length
609,data
610,V
611,MutableMap
612,..
613,nullable
614,assertFalse
615,'d'
616,3L
617,4L
618,!is 
619,r
620,remove
621,UnsupportedOperationException
622,Iterable
623,count
624,el
625,G
626,...
627,$t
628,D
629,toUInt
630,sum
631,4321
632,--
633,1234
634,reversed
635,transform
636,component1
637,component2
638,doTest
639,$a
640,$b
641,1:2;2:3;3:4;
642,$s
643,checkTrue
644,hit
645,checkTrueWithMessage
646,checkFalse
647,checkFalseWithMessage
648,FAIL 0
649,FAIL 1
650,FAIL 2
651,FAIL 3
652,ignore
653,FAIL 4
654,Checker
655,Baz
656,error
657,Fail 1
658,Fail 2
659,Dummy
660,loader
661,classLoader
662,setPackageAssertionStatus
663,loadClass
664,newInstance
665,ShouldBeEnabled
666,ShouldBeDisabled
667,c1
668,anonymousInitializer
669,Inner
670,inner
671,Local
672,BOOYA
673,FAIL 5
674,FAIL 6
675,FAIL 7
676,RuntimeException
677,Outer
678,Throwable
679,helpers
680,coroutines
681,suspend
682,builder
683,startCoroutine
684,EmptyContinuation
685,experimental
686,i1
687,i3
688,inv
689,shl
690,16
691,32
692,l1
693,l2
694,s1
695,s2
696,s3
697,s4
698,b4
699,Number
700,plus
701,minus
702,times
703,rem
704,infix
705,a4
706,a5
707,a6
708,'A'
709,fail 3
710,fail 4
711,fail 5
712,fail 6
713,fail 7
714,fail 8
715,! 
716,<=
717,compareTo
718,org
719,jetbrains
720,NotNull
721,Nothing
722,Error
723,!==
724,MIN_VALUE
725,Comparable
726,42L
727,Fail 3
728,Fail 4
729,0.0F
730,Object
731,def
732,abc
733,equals1
734,equals
735,fail 0
736,fold
737,0L
738,15
739,Map
740,mapOf
741,finallyBlock
742,finally
743,typeTest
744,valueOf
745,10L
746,intList
747,longList
748,filter
749,doWhileStatement
750,do
751,hashCode
752,base
753,TestClass
754,checkNoMethod
755,checkMethodExists
756,test2DefaultImpls
757,parameterTypes
758,fail: method 
759, was found in 
760, was not found in 
761,getFoo
762,222
763,superExpression
764,super
765,Collection
766,$r
767,AImpl
768,explicitDelegation
769,Box
770,Impl
771,U
772,Fail #1
773,Fail #2
774,Fail #3
775,Fail #4
776,Z1
777,z1
778,z2
779,f2
780,B1
781,B2
782,f3
783,56
784,$value
785,23
786,dd
787,hello
788,$id
789,Child
790,CharSequence
791,X
792,Y
793,MutableCollection
794,MutableList
795,HashSet
796,17
797,contains
798,containsAll
799,indexOf
800,lastIndexOf
801,listIterator
802,ListIterator
803,subList
804,fromIndex
805,toIndex
806,cde
807,MutableIterator
808,addAll
809,removeAll
810,retainAll
811,clear
812,removeAt
813,MutableListIterator
814,other
815,elements
816,javaPrimitiveType
817,invoke
818,cause
819,"
    }

    return "
820,S
821,MyList
822,containsKey
823,key
824,containsValue
825,keys
826,values
827,entries
828,Entry
829,putAll
830,TestKt
831,extends
832,lol
833,Collections
834,MutableSet
835,MutableEntry
836,xyz
837,mm
838,456
839,ClassCastException
840,IllegalArgumentException
841,NullPointerException
842,JvmDefault
843,h
844,jClass
845,$c
846,foo3
847,foo4
848,bb
849,T3
850,T4
851,FAIL2
852,sb
853,IBar
854,fn
855,Arrays
856,collect
857,inc
858,Exception
859,$test1
860,$test2
861,test1: 
862,test2: 
863,$test3
864,test4: 
865,$test4
866,Pair
867,ref
868,f1
869,sorted
870,$expected
871,$actual
872,Fail 1: 
873,Host
874,'K'
875,'O'
876,I2
877,r1
878,$r1
879,r2
880,$r2
881,r3
882,8
883,14
884,18
885,19
886,22
887,25
888,26
889,27
890,28
891,29
892,31
893,33
894,34
895,36
896,37
897,FAIL2 
898,3.14
899,ok
900,target
901,KCallable
902,label
903,use
904,43
905,arg
906,also
907,intrinsics
908,runSuspend
909,failed
910,invokeSuspend
911,crossinline
912,TODO
913,forEach
914,state
915,P
916,Fail 2: 
917,Fail 3: 
918,w
919,F
920,: 
921,bar1
922,bar2
923,aa
924,KMutableProperty1
925,full
926,memberProperties
927,as?
928,functions
929,className
930,checkEqual
931, and 
932,$y
933, should be equal
934, should have the same hash code
935,checkNotEqual
936, should NOT be equal
937,v1
938,member
939,extension
940,ff
941,not
942,111
943,ENTRY
944,arg1
945,Wrapper
946,baz
947,Container
948,q
949,$x1
950,$x2
951,KProperty1
952,Function0
953,Function1
954,Comparator
955,compare
956,mutableListOf
957,$l
958,parenthesizedType
959,ext
960,instance
961,two
962,newValue
963,$f
964,$n
965,Value
966,text
967,Q
968,topLevel
969,lazy
970,Thread
971,start
972,join
973,KMutableProperty0
974,KMutableProperty
975,p1
976,p2
977,p3
978,")
}
"
979,storage
980,$o
981,io
982,close
983,isAccessible
984,assertNull
985,fail 11
986,param
987,typeConstraints
988,where
989,typeConstraint
990,println
991,exception
992,fn0
993,fn1
994,assertFailsWith
995,$operation
996,Function2
997,$e
998,": should not throw exceptions, got "
999,f0
1000,condition
1001,nil
1002,mutableMapOf
1003,6L
1004,create
1005,@ 
1006,It
1007,entry
1008,predicate
1009,global
1010,FOO
1011,ic
1012,ab
1013,aaa
1014,bbb
1015,System
1016,msg
1017,$this
1018,yy
1019,p4
1020,StringBuilder
1021,body
1022,append
1023,!in 
1024,rangeTest
1025,IntRange
1026,rangeTo
1027,qux
1028,left
1029,45
1030,test5
1031,test6
1032,test7
1033,continue
1034,copy
1035,xx
1036,Failed
1037,status
1038,obj
1039,outer
1040,v2
1041,plusAssign
1042,log
1043,logged
1044,$log
1045,zzz
1046,javaObjectType
1047,$k
1048,'z'
1049,k2
1050,canonicalName
1051,")

    return "
1052,200
1053,$z
1054,Foo2
1055,flag
1056,lambda
1057,$d
1058,#
1059,Continuation
1060,EmptyCoroutineContext
1061,getOrThrow
1062,Controller
1063,suspendWithResult
1064,suspendCoroutineUninterceptedOrReturn
1065,resume
1066,COROUTINE_SUSPENDED
1067,controller
1068,callback
1069,cc
1070,cs
1071,subSequence
1072,end
1073,fail 9
1074,fail 10
1075,setOf
1076,arrayListOf
1077,concurrent
1078,emptyList
1079,arguments
1080,MultifileClass
1081,JvmMultifileClass
1082,Callable
1083,job
1084,Sam
1085,'
1086,sam
1087,suspendHere
1088,suspendCoroutine
1089,ContinuationAdapter
1090,context
1091,CoroutineContext
1092,resumeWithException
1093,lib
1094,platformModifier
1095,expect
1096,publicField
1097,internalField
1098,JvmPackageName
1099,getO
1100,declaredMemberProperties
1101,Inv
1102,5L
1103,kotlinFunction
1104,sealed
1105,1u
1106,0u
1107,KRunnable
1108,fail2: 
1109,third
1110,fail3: 
1111,UNCHECKED_CAST
1112,UNSUPPORTED_FEATURE
1113,string
1114,IC
1115,FAIL 1 
1116,IFoo
1117,FAIL 1: 
1118,KInterface
1119,getStackTrace
1120,KInterface2
1121,ULong
1122,FAIL 2: 
1123,FAIL 3: 
1124,FAIL 4: 
1125,Fail: '
1126,<init>
1127,<clinit>
1128,zap
1129,contracts
1130,contract
1131,callsInPlace
1132,InvocationKind
1133,EXACTLY_ONCE
1134,OptIn
1135,-=
1136,abcdef
1137,'4'
1138,abcd
1139,'h'
1140,'0'
1141,ClosedRange
1142,print
1143,ghi
1144,2u
1145,3u
1146, else 
1147,fail: '
1148,$ss
1149,0:a;1:b;2:c;3:d;
1150,asSequence
1151,Sequence
1152,sequence
1153,$v
1154,ExperimentalTypeInference
1155,yield
1156,BuilderInference
1157,createCoroutine
1158,continuation
1159,IllegalStateException
1160,handleResultContinuation
1161,FooImpl
1162,ignored
1163,return@builder
1164,JvmOverloads
1165,resumeWith
1166,execute
1167,suspendWithValue
1168,);
1169,suspendWithException
1170,Obj
1171,flow
1172,Flow
1173,FlowCollector
1174,handleExceptionContinuation
1175,suspendThere
1176,57
1177,counter
1178,Result
1179,H
1180,FAIL: 
1181,step
1182,success
1183,properties
1184,underlying
1185,tailrec
1186,1000000
1187,100000
1188,quz
1189,FAIL 2 
1190,toBoxResult
1191,toResultString
1192,generic
1193,!! 
1194,suspendMe
1195,callLocal
1196,getEnclosingClass
1197,startsWith
1198,p01
1199,p02
1200,p03
1201,p04
1202,p05
1203,p06
1204,p07
1205,p08
1206,p09
1207,p10
1208,p11
1209,p12
1210,p13
1211,p14
1212,p15
1213,p16
1214,p17
1215,p18
1216,p19
1217,p20
1218,p21
1219,p22
1220,p23
1221,p24
1222,p25
1223,p26
1224,p27
1225,p28
1226,p29
1227,last
1228,members
1229,emptyMap
1230,A2
1231,TailCallOptimizationChecker
1232,saveStackTrace
1233,holder
1234,max
1235,Fail 5
1236,Fail 6
1237,$v1
1238,$v2
1239,constructors
1240,nn
1241,41
1242,70
1243,$xx
1244,$test5
1245,fail get
1246,fail set
1247,notNull
1248,provideDelegate
1249,getDelegate
1250,all
1251,kProperty
1252,classifier
1253,runLogged
1254,host
1255,tdf(
1256,Interface
1257,NO_TAIL_CALLS_FOUND
1258,NON_TAIL_RECURSIVE_CALL
1259,Season
1260,WINTER
1261,SPRING
1262,SUMMER
1263,AUTUMN
1264,declaringClass
1265,En
1266,Enum
1267,p5
1268,p6
1269,prop1
1270,prop2
1271,prop3
1272,prop4
1273,prop5
1274,"fail 1, expected = "
1275,"
    if (annotation.p2 != prop2) return "
1276,"
    if (annotation.p3 != prop3) return "
1277,"
    if (annotation.p4 != prop4) return "
1278,"
    if (annotation.p5 != prop5) return "
1279,'f'
1280,zero
1281,fail: expected exception
1282,Nullable
1283,N
1284,function
1285,", actual: "
1286,Fail 0
1287,privateFun
1288,enclosingMethod
1289,FunIFace
1290,downTo
1291,start;
1292,KType
1293,toTypedArray
1294,fourth
1295,A1
1296,Str
1297,Simple
1298,Fail 7
1299,Fail 8
1300,Fail 10
1301,Fail 11
1302,Fail 12
1303,Fail 14
1304,Fail 15
1305,Fail 16
1306,Fail 9
1307,Fail 13
1308,Fail 17
1309,Fail 18
1310,Fail 19
1311,Fail 20
1312,Fail 21
1313,Fail 22
1314,Fail 23
1315,Fail 24
1316,Fail 25
1317,Fail 26
1318,Fail 27
1319,Fail 28
1320,Fail 29
1321,one
1322,1234L
1323,toUByte
1324,wrong
1325,useX
1326,list1
1327,$list1
1328,list2
1329,$list2
1330,KFunction
1331,extensionValue
1332,dispatch
1333,dispatchValue
1334,normal
1335,normalValue
1336,'i'
1337,fs
1338,Failed: t=
1339,getBar
1340,nullString
1341,notNullString
1342,protectedFun
1343,getDeclaringClass
1344,enclosingClass
1345,ZImpl
1346,ZImpl2
1347,assertNotEquals
1348,Range
1349,getK
1350,checkLess
1351, >= 
1352,Fail !(
1353, < 
1354, <= 
1355, > 
1356,.compareTo(
1357,) >= 0
1358,order
1359,$order
1360,ax
1361,nx
1362,an
1363,bx
1364,my
1365,Klass
1366,UninitializedPropertyAccessException
1367,at
1368,range1
1369,range2
1370,range3
1371,1uL
1372,0uL
1373,UByte
1374,UShort
1375,1UL
1376,0UL
1377,range0
1378,element0
1379,element1
1380,element2
1381,element3
1382,element4
1383,testR0xE0
1384,testR0xE1
1385,testR0xE2
1386,testR0xE3
1387,testR0xE4
1388,testR1xE0
1389,testR1xE1
1390,testR1xE2
1391,testR1xE3
1392,testR1xE4
1393,end;
1394,step;
1395,start;end;step;
1396,step2;
1397,step3;
1398,start;end;step2;step3;
1399,list3
1400,$list3
1401,list4
1402,range4
1403,$list4
1404,list5
1405,range5
1406,$list5
1407,MinI
1408,MinB
1409,MinS
1410,MinL
1411,MinC
1412,8L
1413,MaxI
1414,MaxB
1415,MaxS
1416,MaxL
1417,MaxC
1418,'k'
1419,'g'
1420,'e'
1421,indexList
1422,valueList
1423,sumL
1424,sumC
1425,Loop should be executed once
1426,Should be executed once
1427,actualValues
1428,Fail: should throw on get()
1429,Fail: should throw on get() in loop header
1430,PARAMETER
1431,LOCAL_VARIABLE
1432,intProgression
1433,longProgression
1434,charList
1435,charProgression
1436,7L
1437,'j'
1438,11L
1439,uintList
1440,uintProgression
1441,ulongList
1442,ulongProgression
1443,2uL
1444,7u
1445,7uL
1446,5u
1447,8u
1448,6u
1449,4u
1450,8uL
1451,6uL
1452,4uL
1453,3uL
1454,5uL
1455,10u
1456,10uL
1457,9u
1458,9uL
1459,toULong
1460,11u
1461,11uL
1462,toUShort
1463,MinUI
1464,MinUB
1465,MinUS
1466,MinUL
1467,MaxUI
1468,MaxUL
1469,javaType
1470,callBy
1471,java.lang.String
1472,getEnclosingMethod
1473,method: 
1474,$enclosingMethod
1475,enclosing class: 
1476,$enclosingClass
1477,anonymous function has a declaring class: 
1478,$declaringClass
1479,upperBounds
1480,KTypeParameter
1481,typeOf
1482,java.lang.Integer
1483,synchronized
1484,ub
1485,ua
